---
import type { NestedPages } from "./Drawer.astro";

interface Props {
    parent: string;
    children: NestedPages | null;
    fullPath: string;
}

const { parent, children, fullPath } = Astro.props;
const hasChildren = children && Object.keys(children).length > 0;
const decodedURI = decodeURI(Astro.url.pathname);
const isActivePath = !hasChildren && decodedURI === fullPath;

if (!hasChildren) {
    console.log(decodedURI, "==", fullPath, "?");
}
---

{
    hasChildren && (
        <li>
            <details open>
                <summary>
                    <a href={fullPath}>{parent}</a>
                </summary>
                <ul>
                    {Object.entries(children).map(([child, grandChildren]) => (
                        <Astro.self
                            parent={child}
                            children={grandChildren}
                            fullPath={`${fullPath}/${child}`}
                        />
                    ))}
                </ul>
            </details>
        </li>
    )
}
{
    !hasChildren && parent !== "" && (
        <li>
            <a class={isActivePath ? "active" : ""} href={fullPath}>
                {parent}
            </a>
        </li>
    )
}
